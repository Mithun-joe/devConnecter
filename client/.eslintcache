[{"D:\\Documents\\NodeFiles\\devconnector\\client\\src\\index.js":"1","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\App.js":"2","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\layout\\Navbar.js":"3","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\layout\\Landing.js":"4","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\auth\\Register.js":"5","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\auth\\Login.js":"6","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\store.js":"7","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\reducers\\index.js":"8","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\reducers\\alert.js":"9","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\actions\\types.js":"10","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\actions\\alert.js":"11","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\layout\\alert.js":"12","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\actions\\auth.js":"13","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\reducers\\auth.js":"14","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\utils\\setAuthToken.js":"15","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\dashboard\\Dashboard.js":"16","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\routing\\PrivateRoute.js":"17","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\reducers\\profile.js":"18","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\actions\\profile.js":"19","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\layout\\spinner.js":"20","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\layout\\Spinner.js":"21","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\profile-form\\CreateProfile.js":"22","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\dashboard\\DashboardAction.js":"23","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\profile-form\\EditProfile.js":"24","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\profile-form\\AddExperience.js":"25","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\profile-form\\AddEducation.js":"26","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\dashboard\\Experience.js":"27","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\dashboard\\Education.js":"28","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\profiles\\Profiles.js":"29","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\profiles\\ProfileItems.js":"30"},{"size":410,"mtime":1609349199794,"results":"31","hashOfConfig":"32"},{"size":2069,"mtime":1613118407572,"results":"33","hashOfConfig":"32"},{"size":1587,"mtime":1613118558367,"results":"34","hashOfConfig":"32"},{"size":1266,"mtime":1609578745499,"results":"35","hashOfConfig":"32"},{"size":4092,"mtime":1609525998769,"results":"36","hashOfConfig":"32"},{"size":2682,"mtime":1609611497863,"results":"37","hashOfConfig":"32"},{"size":398,"mtime":1609498470489,"results":"38","hashOfConfig":"32"},{"size":207,"mtime":1609573584574,"results":"39","hashOfConfig":"32"},{"size":408,"mtime":1609512074170,"results":"40","hashOfConfig":"32"},{"size":712,"mtime":1613117931311,"results":"41","hashOfConfig":"32"},{"size":394,"mtime":1609510462937,"results":"42","hashOfConfig":"32"},{"size":510,"mtime":1609509563263,"results":"43","hashOfConfig":"32"},{"size":2254,"mtime":1609581515620,"results":"44","hashOfConfig":"32"},{"size":1304,"mtime":1613073401342,"results":"45","hashOfConfig":"32"},{"size":259,"mtime":1609522446211,"results":"46","hashOfConfig":"32"},{"size":2186,"mtime":1613074603238,"results":"47","hashOfConfig":"32"},{"size":615,"mtime":1609573199319,"results":"48","hashOfConfig":"32"},{"size":1269,"mtime":1613117956933,"results":"49","hashOfConfig":"32"},{"size":6551,"mtime":1613118270316,"results":"50","hashOfConfig":"32"},{"size":291,"mtime":1609580140764,"results":"51","hashOfConfig":"32"},{"size":291,"mtime":1609580140764,"results":"52","hashOfConfig":"32"},{"size":7047,"mtime":1609612552352,"results":"53","hashOfConfig":"32"},{"size":721,"mtime":1609603289619,"results":"54","hashOfConfig":"32"},{"size":8371,"mtime":1609612552219,"results":"55","hashOfConfig":"32"},{"size":4070,"mtime":1613070342303,"results":"56","hashOfConfig":"32"},{"size":4268,"mtime":1613073852840,"results":"57","hashOfConfig":"32"},{"size":1509,"mtime":1613074524116,"results":"58","hashOfConfig":"32"},{"size":1494,"mtime":1613073719397,"results":"59","hashOfConfig":"32"},{"size":1278,"mtime":1613122092982,"results":"60","hashOfConfig":"32"},{"size":1338,"mtime":1613122298705,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"d2bxoq",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Documents\\NodeFiles\\devconnector\\client\\src\\index.js",[],["135","136"],"D:\\Documents\\NodeFiles\\devconnector\\client\\src\\App.js",[],"D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\layout\\Navbar.js",[],"D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\layout\\Landing.js",[],"D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\auth\\Register.js",["137"],"import React, {Fragment} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Link , Redirect} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types'\r\nimport {setAlert} from \"../../actions/alert\";\r\nimport {register} from \"../../actions/auth\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst Register = ({ setAlert,register,isAuthenticated}) =>{\r\n\r\n    const [formData,setformData] = React.useState({\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        password2:''\r\n    });\r\n\r\n    const {name,email,password,password2} = formData;\r\n\r\n    const onChange = e => setformData({...formData, [e.target.name]:e.target.value});\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        if(password !== password2){\r\n            setAlert('passwords do not match','danger')\r\n        }else{\r\n            register({name,email,password});\r\n\r\n          // //Important Code for User register\r\n          //   const newUser = {\r\n          //       name,\r\n          //       email,\r\n          //       password\r\n          //   };\r\n          //\r\n          //   try{\r\n          //     const config ={\r\n          //         headers:{\r\n          //             'Content-Type':'application/json'\r\n          //         }\r\n          //     };\r\n          //\r\n          //     const body = JSON.stringify(newUser);\r\n          //     const res = await axios.post('/api/users',body,config);\r\n          //     console.log(res.data)\r\n          //   }catch (err) {\r\n          //       console.error(err.response.data);\r\n          //   }\r\n        }\r\n    };\r\n\r\n    //redirect if logged in\r\n    if(isAuthenticated){\r\n        return <Redirect to='/dashboard'/>\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">Sign Up</h1>\r\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\r\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Name\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={e => onChange(e)}\r\n                       />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Email Address\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                    <small className=\"form-text\"\r\n                    >This site uses Gravatar so if you want a profile image, use a\r\n                        Gravatar email</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm Password\"\r\n                        name=\"password2\"\r\n                        value={password2}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\"/>\r\n            </form>\r\n            <p className=\"my-1\">\r\n                Already have an account? <Link to=\"/login\">Log In</Link>\r\n            </p>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nRegister.propTypes = {\r\n    setAlert: PropTypes.func.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated:state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps,{ setAlert, register })(Register);","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\auth\\Login.js",[],"D:\\Documents\\NodeFiles\\devconnector\\client\\src\\store.js",[],"D:\\Documents\\NodeFiles\\devconnector\\client\\src\\reducers\\index.js",[],"D:\\Documents\\NodeFiles\\devconnector\\client\\src\\reducers\\alert.js",["138"],"import {SET_ALERT,REMOVE_ALERT} from '../actions/types'\r\nconst initialState = [];\r\n\r\nexport default function (state= initialState,action) {\r\n    const {type,payload} = action;\r\n    switch (type) {\r\n        case SET_ALERT:\r\n            return [...state,payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n        default:\r\n            return state\r\n    }\r\n}","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\actions\\types.js",[],"D:\\Documents\\NodeFiles\\devconnector\\client\\src\\actions\\alert.js",[],"D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\layout\\alert.js",["139"],"import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst Alert = ({alerts}) => alerts !== null && alerts.length > 0\r\n    && alerts.map(alert => (\r\n        <div key='alert.id' className={`alert alert-${alert.alertType}`}>\r\n            {alert.msg}\r\n        </div>\r\n    ));\r\n\r\nAlert.propTypes ={\r\n    alerts:PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   alerts:state.alert\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\actions\\auth.js",[],"D:\\Documents\\NodeFiles\\devconnector\\client\\src\\reducers\\auth.js",["140"],"import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT, ACCOUNT_DELETED\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    token:localStorage.getItem('token'),\r\n    isAuthenticated:false,\r\n    loading:true,\r\n    user:null\r\n};\r\n\r\nexport default function (state=initialState,action) {\r\n    const {type,payload}=action;\r\n    switch (type) {\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token',payload.token);\r\n            return{\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            };\r\n        case REGISTER_FAIL:\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case ACCOUNT_DELETED:\r\n        case LOGOUT:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token:null,\r\n                isAuthenticated:false,\r\n                loading: false\r\n            };\r\n        case USER_LOADED:\r\n            return{\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading:false,\r\n                user:payload\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\utils\\setAuthToken.js",[],"D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\dashboard\\Dashboard.js",["141"],"import React, {Fragment, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {getCurrentProfile} from \"../../actions/profile\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport DashboardActions from \"./DashboardAction\";\r\nimport Experience from \"./Experience\";\r\nimport Education from \"./Education\";\r\nimport {deleteAccount} from \"../../actions/profile\";\r\n\r\nconst Dashboard = ({getCurrentProfile,auth:{user},profile:{profile,loading} , deleteAccount}) =>{\r\n    useEffect(()=>{\r\n        getCurrentProfile();\r\n    },[]);\r\n\r\n    return loading && profile === null\r\n        ? <Spinner/>\r\n        : <Fragment>\r\n            <h1 className='large text-primary'>Dashboard</h1>\r\n            <p className='lead'>\r\n                <i className='fas fa-user'></i>{' '}\r\n                Welcome {user && user.name}\r\n            </p>\r\n            {profile !== null\r\n                ?  <Fragment>\r\n                    <DashboardActions/>\r\n                    <Experience experience={profile.experience}/>\r\n                    <Education education={profile.education}/>\r\n\r\n                    <div className='my-2'>\r\n                        <button className='btn btn-danger' onClick={()=>deleteAccount()}>\r\n                            <i className='fas fa-user-minus'></i> Delete Account\r\n                        </button>\r\n\r\n                    </div>\r\n                </Fragment>\r\n                : <Fragment>\r\n                    <p>You have not yet setup a profile, please add some info</p>\r\n                    <Link to='/create-profile' className='btn btn-primary my-1'>\r\n                        Create Profile\r\n                    </Link>\r\n                </Fragment>\r\n            }\r\n        </Fragment>\r\n};\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile:PropTypes.func.isRequired,\r\n    auth:PropTypes.object.isRequired,\r\n    profile:PropTypes.object.isRequired,\r\n    deleteAccount : PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    auth :state.auth,\r\n    profile:state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps,{getCurrentProfile,deleteAccount})(Dashboard);\r\n\r\n","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\routing\\PrivateRoute.js",[],"D:\\Documents\\NodeFiles\\devconnector\\client\\src\\reducers\\profile.js",["142"],"D:\\Documents\\NodeFiles\\devconnector\\client\\src\\actions\\profile.js",[],"D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\layout\\spinner.js",["143"],"import React, {Fragment} from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\n\r\nexport default () => (\r\n    <Fragment>\r\n        <img\r\n            src={spinner}\r\n            style={{width:'200px',margin:'auto',display:'block'}}\r\n            alt='Loading....'\r\n        />\r\n    </Fragment>\r\n)",["144","145"],"D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\layout\\Spinner.js",["146"],"import React, {Fragment} from 'react';\r\nimport spinner from './loader2.gif';\r\n\r\n\r\nexport default () => (\r\n    <Fragment>\r\n        <img\r\n            src={spinner}\r\n            style={{width:'200px',margin:'auto',display:'block'}}\r\n            alt='Loading....'\r\n        />\r\n    </Fragment>\r\n)","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\profile-form\\CreateProfile.js",["147"],"import React, {Fragment, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\";\r\nimport {createProfile} from \"../../actions/profile\";\r\nimport {Link, withRouter} from 'react-router-dom'\r\n\r\nconst CreateProfile = ({createProfile, history}) => {\r\n    const [formData,setformData] = useState({\r\n        company:'',\r\n        website:'',\r\n        location:'',\r\n        status:'',\r\n        skills:'',\r\n        githubusername:'',\r\n        bio:'',\r\n        twitter:'',\r\n        linkedin:'',\r\n        facebook:'',\r\n        youtube:'',\r\n        instagram:''\r\n    });\r\n\r\n    const[displaySocialInputs,toggleSocialInputs] = useState(false);\r\n\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        bio,\r\n        status,\r\n        githubusername,\r\n        skills,\r\n        youtube,\r\n        facebook,\r\n        twitter,\r\n        instagram,\r\n        linkedin\r\n    } = formData;\r\n\r\n    const onChange = (e) => setformData({...formData,[e.target.name]:e.target.value});\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        createProfile(formData,history)\r\n    };\r\n\r\n    return(\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">\r\n                Create Your Profile\r\n            </h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n                profile stand out\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                    <select name=\"status\" value={status} onChange={e=>onChange(e)}>\r\n                        <option value=\"0\">* Select Professional Status</option>\r\n                        <option value=\"Developer\">Developer</option>\r\n                        <option value=\"Junior Developer\">Junior Developer</option>\r\n                        <option value=\"Senior Developer\">Senior Developer</option>\r\n                        <option value=\"Manager\">Manager</option>\r\n                        <option value=\"Student or Learning\">Student or Learning</option>\r\n                        <option value=\"Instructor\">Instructor or Teacher</option>\r\n                        <option value=\"Intern\">Intern</option>\r\n                        <option value=\"Other\">Other</option>\r\n                    </select>\r\n                    <small className=\"form-text\"\r\n                    >Give us an idea of where you are at in your career</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e=>onChange(e)}/>\r\n                    <small className=\"form-text\"\r\n                    >Could be your own company or one you work for</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e=>onChange(e)}/>\r\n                    <small className=\"form-text\"\r\n                    >Could be your own or a company website</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e=>onChange(e)}/>\r\n                    <small className=\"form-text\"\r\n                    >City & state suggested (eg. Boston, MA)</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e=>onChange(e)}/>\r\n                    <small className=\"form-text\"\r\n                    >Please use comma separated values (eg.\r\n                        HTML,CSS,JavaScript,PHP)</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Github Username\"\r\n                        name=\"githubusername\"\r\n                        value={githubusername}\r\n                        onChange={e=>onChange(e)}\r\n                    />\r\n                    <small className=\"form-text\"\r\n                    >If you want your latest repos and a Github link, include your\r\n                        username</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e=>onChange(e)}></textarea>\r\n                    <small className=\"form-text\">Tell us a little about yourself</small>\r\n                </div>\r\n\r\n                <div className=\"my-2\">\r\n                    <button type=\"button\" onClick={()=> toggleSocialInputs(!displaySocialInputs)} className=\"btn btn-light\">\r\n                        Add Social Network Links\r\n                    </button>\r\n                    <span>Optional</span>\r\n                </div>\r\n\r\n\r\n                {displaySocialInputs && <Fragment>\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-twitter fa-2x\"></i>\r\n                        <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e=>onChange(e)}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-facebook fa-2x\"></i>\r\n                        <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e=>onChange(e)}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-youtube fa-2x\"></i>\r\n                        <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e=>onChange(e)}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                        <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e=>onChange(e)}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-instagram fa-2x\"></i>\r\n                        <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e=>onChange(e)}/>\r\n                    </div>\r\n                </Fragment>}\r\n\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary my-1\"/>\r\n                <a className=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired\r\n};\r\n\r\n\r\n\r\n\r\nexport default connect(null,{createProfile})(withRouter(CreateProfile));","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\dashboard\\DashboardAction.js",[],"D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\profile-form\\EditProfile.js",["148"],"import React, {Fragment, useState , useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\";\r\nimport {createProfile , getCurrentProfile} from \"../../actions/profile\";\r\nimport {Link, withRouter} from 'react-router-dom'\r\n\r\nconst EditProfile = ({createProfile, getCurrentProfile, profile:{profile,loading}, history}) => {\r\n    const [formData,setformData] = useState({\r\n        company:'',\r\n        website:'',\r\n        location:'',\r\n        status:'',\r\n        skills:'',\r\n        githubusername:'',\r\n        bio:'',\r\n        twitter:'',\r\n        linkedin:'',\r\n        facebook:'',\r\n        youtube:'',\r\n        instagram:''\r\n    });\r\n\r\n    const[displaySocialInputs,toggleSocialInputs] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        getCurrentProfile();\r\n\r\n        setformData({\r\n            company: loading || !profile.company ? '' : profile.company,\r\n            website: loading || !profile.website ? '' : profile.website,\r\n            location: loading || !profile.location ? '' : profile.location,\r\n            bio: loading || !profile.bio ? '' : profile.bio,\r\n            status: loading || !profile.status ? '' : profile.status,\r\n            githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\r\n            skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n            youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n            facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n            twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n            instagram: loading || !profile.social ? '' : profile.social.instagram,\r\n            linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n        })\r\n    },[loading]);\r\n\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        bio,\r\n        status,\r\n        githubusername,\r\n        skills,\r\n        youtube,\r\n        facebook,\r\n        twitter,\r\n        instagram,\r\n        linkedin\r\n    } = formData;\r\n\r\n    const onChange = (e) => setformData({...formData,[e.target.name]:e.target.value});\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        createProfile(formData,history,true);\r\n\r\n    };\r\n\r\n    return(\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">\r\n                Create Your Profile\r\n            </h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n                profile stand out\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                    <select name=\"status\" value={status} onChange={e=>onChange(e)}>\r\n                        <option value=\"0\">* Select Professional Status</option>\r\n                        <option value=\"Developer\">Developer</option>\r\n                        <option value=\"Junior Developer\">Junior Developer</option>\r\n                        <option value=\"Senior Developer\">Senior Developer</option>\r\n                        <option value=\"Manager\">Manager</option>\r\n                        <option value=\"Student or Learning\">Student or Learning</option>\r\n                        <option value=\"Instructor\">Instructor or Teacher</option>\r\n                        <option value=\"Intern\">Intern</option>\r\n                        <option value=\"Other\">Other</option>\r\n                    </select>\r\n                    <small className=\"form-text\"\r\n                    >Give us an idea of where you are at in your career</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e=>onChange(e)}/>\r\n                    <small className=\"form-text\"\r\n                    >Could be your own company or one you work for</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e=>onChange(e)}/>\r\n                    <small className=\"form-text\"\r\n                    >Could be your own or a company website</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e=>onChange(e)}/>\r\n                    <small className=\"form-text\"\r\n                    >City & state suggested (eg. Boston, MA)</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e=>onChange(e)}/>\r\n                    <small className=\"form-text\"\r\n                    >Please use comma separated values (eg.\r\n                        HTML,CSS,JavaScript,PHP)</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Github Username\"\r\n                        name=\"githubusername\"\r\n                        value={githubusername}\r\n                        onChange={e=>onChange(e)}\r\n                    />\r\n                    <small className=\"form-text\"\r\n                    >If you want your latest repos and a Github link, include your\r\n                        username</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e=>onChange(e)}></textarea>\r\n                    <small className=\"form-text\">Tell us a little about yourself</small>\r\n                </div>\r\n\r\n                <div className=\"my-2\">\r\n                    <button type=\"button\" onClick={()=> toggleSocialInputs(!displaySocialInputs)} className=\"btn btn-light\">\r\n                        Add Social Network Links\r\n                    </button>\r\n                    <span>Optional</span>\r\n                </div>\r\n\r\n\r\n                {displaySocialInputs && <Fragment>\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-twitter fa-2x\"></i>\r\n                        <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e=>onChange(e)}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-facebook fa-2x\"></i>\r\n                        <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e=>onChange(e)}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-youtube fa-2x\"></i>\r\n                        <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e=>onChange(e)}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                        <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e=>onChange(e)}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-instagram fa-2x\"></i>\r\n                        <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e=>onChange(e)}/>\r\n                    </div>\r\n                </Fragment>}\r\n\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary my-1\"/>\r\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nEditProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    profile:PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps,{createProfile,getCurrentProfile})(withRouter(EditProfile));","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\profile-form\\AddExperience.js",["149","150"],"import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\";\r\nimport {addExperience} from \"../../actions/profile\";\r\nimport {Link,withRouter} from \"react-router-dom\";\r\n\r\nconst AddExperience = ({addExperience,history}) => {\r\n    const [formData,setFormData] = React.useState({\r\n        company:'',\r\n        title:'',\r\n        location:'',\r\n        from:'',\r\n        to:'',\r\n        current:false,\r\n        description:''\r\n    });\r\n\r\n    const [toDateDisabled,toggleDisabled] = React.useState(false);\r\n\r\n    const {company,title,location,from,to,current,description} = formData;\r\n\r\n    const onChange = e => setFormData({...formData,[e.target.name]:e.target.value});\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        addExperience(formData,history)\r\n    };\r\n\r\n  return (\r\n      <Fragment>\r\n          <h1 className=\"large text-primary\">\r\n              Add An Experience\r\n          </h1>\r\n          <p className=\"lead\">\r\n              <i className=\"fas fa-code-branch\"></i> Add any developer/programming\r\n              positions that you have had in the past\r\n          </p>\r\n          <small>* = required field</small>\r\n          <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n              <div className=\"form-group\">\r\n                  <input type=\"text\"\r\n                         placeholder=\"* Job Title\"\r\n                         name=\"title\"\r\n                         value={title}\r\n                         onChange={e=>onChange(e)} required/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <input\r\n                      type=\"text\"\r\n                      placeholder=\"* Company\"\r\n                      name=\"company\"\r\n                      value={company}\r\n                      onChange={e => onChange(e)}\r\n                      required/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <input\r\n                      type=\"text\"\r\n                      placeholder=\"Location\"\r\n                      name=\"location\"\r\n                      value={location}\r\n                      onChange={e => onChange(e)}\r\n                  />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <h4>From Date</h4>\r\n                  <input\r\n                      type=\"date\"\r\n                      name=\"from\"\r\n                      value={from}\r\n                      onChange={e => onChange(e)}\r\n                  />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <p><input\r\n                      type=\"checkbox\"\r\n                      name=\"current\"\r\n                      checked={current}\r\n                      value={current}\r\n                      onChange={e=>{\r\n                          setFormData({...formData,current: !current});\r\n                          toggleDisabled(!toDateDisabled);\r\n                      }}\r\n                  />{' '} Current Job</p>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <h4>To Date</h4>\r\n                  <input\r\n                      type=\"date\"\r\n                      value={to}\r\n                      disabled={toDateDisabled ? 'disabled': ''}\r\n                      onChange={e=>onChange(e)}\r\n                      name=\"to\"/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <textarea\r\n                      name=\"description\"\r\n                      cols=\"30\"\r\n                      rows=\"5\"\r\n                      value={description}\r\n                      onChange={e=>onChange(e)}\r\n                      placeholder=\"Job Description\"\r\n                  />\r\n              </div>\r\n              <input type=\"submit\" className=\"btn btn-primary my-1\"/>\r\n              <a className=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\r\n          </form>\r\n      </Fragment>\r\n  )\r\n};\r\n\r\nAddExperience.propTypes = {\r\n    addExperience:PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null,{addExperience})(AddExperience);","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\profile-form\\AddEducation.js",["151","152"],"import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\";\r\nimport {addEducation} from \"../../actions/profile\";\r\nimport {Link,withRouter} from \"react-router-dom\";\r\n\r\nconst AddEducation = ({addEducation,history}) => {\r\n    const [formData,setFormData] = React.useState({\r\n        school:'',\r\n        degree:'',\r\n        fieldofstudy:'',\r\n        from:'',\r\n        to:'',\r\n        current:false,\r\n        description:''\r\n    });\r\n\r\n    const [toDateDisabled,toggleDisabled] = React.useState(false);\r\n\r\n    const {school,degree,fieldofstudy,from,to,current,description} = formData;\r\n\r\n    const onChange = e => setFormData({...formData,[e.target.name]:e.target.value});\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        addEducation(formData,history)\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">\r\n                Add your Education\r\n            </h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-code-branch\"></i> Add any School/bootcamp that you\r\n                have attended\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\"\r\n                           placeholder=\"* School or bootcamp\"\r\n                           name=\"school\"\r\n                           value={school}\r\n                           onChange={e=>onChange(e)}\r\n                           required/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"* Degree or Certification\"\r\n                        name=\"degree\"\r\n                        value={degree}\r\n                        onChange={e => onChange(e)}\r\n                        required/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Field oF Study\"\r\n                        name=\"fieldofstudy\"\r\n                        value={fieldofstudy}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <h4>From Date</h4>\r\n                    <input\r\n                        type=\"date\"\r\n                        name=\"from\"\r\n                        value={from}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <p><input\r\n                        type=\"checkbox\"\r\n                        name=\"current\"\r\n                        checked={current}\r\n                        value={current}\r\n                        onChange={e=>{\r\n                            setFormData({...formData,current: !current});\r\n                            toggleDisabled(!toDateDisabled);\r\n                        }}\r\n                    />{' '} Current School</p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <h4>To Date</h4>\r\n                    <input\r\n                        type=\"date\"\r\n                        value={to}\r\n                        disabled={toDateDisabled ? 'disabled': ''}\r\n                        onChange={e=>onChange(e)}\r\n                        name=\"to\"/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                      name=\"description\"\r\n                      cols=\"30\"\r\n                      rows=\"5\"\r\n                      value={description}\r\n                      onChange={e=>onChange(e)}\r\n                      placeholder=\"Program Description\"\r\n                  />\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary my-1\"/>\r\n                <a className=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nAddEducation.propTypes = {\r\n    addEducation:PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null,{addEducation})(AddEducation);","D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\dashboard\\Experience.js",[],"D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\dashboard\\Education.js",[],"D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\profiles\\Profiles.js",[],"D:\\Documents\\NodeFiles\\devconnector\\client\\src\\components\\profiles\\ProfileItems.js",["153","154"],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":7,"column":8,"nodeType":"161","messageId":"162","endLine":7,"endColumn":13},{"ruleId":"163","severity":1,"message":"164","line":4,"column":1,"nodeType":"165","endLine":14,"endColumn":2},{"ruleId":"159","severity":1,"message":"166","line":17,"column":7,"nodeType":"161","messageId":"162","endLine":17,"endColumn":22},{"ruleId":"163","severity":1,"message":"164","line":18,"column":1,"nodeType":"165","endLine":52,"endColumn":2},{"ruleId":"167","severity":1,"message":"168","line":15,"column":7,"nodeType":"169","endLine":15,"endColumn":9,"suggestions":"170"},{"ruleId":"163","severity":1,"message":"164","line":11,"column":1,"nodeType":"165","endLine":50,"endColumn":2},{"ruleId":"163","severity":1,"message":"171","line":5,"column":1,"nodeType":"165","endLine":13,"endColumn":2},{"ruleId":"155","replacedBy":"172"},{"ruleId":"157","replacedBy":"173"},{"ruleId":"163","severity":1,"message":"171","line":5,"column":1,"nodeType":"165","endLine":13,"endColumn":2},{"ruleId":"159","severity":1,"message":"174","line":5,"column":9,"nodeType":"161","messageId":"162","endLine":5,"endColumn":13},{"ruleId":"167","severity":1,"message":"175","line":42,"column":7,"nodeType":"169","endLine":42,"endColumn":16,"suggestions":"176"},{"ruleId":"159","severity":1,"message":"174","line":5,"column":9,"nodeType":"161","messageId":"162","endLine":5,"endColumn":13},{"ruleId":"159","severity":1,"message":"177","line":5,"column":14,"nodeType":"161","messageId":"162","endLine":5,"endColumn":24},{"ruleId":"159","severity":1,"message":"174","line":5,"column":9,"nodeType":"161","messageId":"162","endLine":5,"endColumn":13},{"ruleId":"159","severity":1,"message":"177","line":5,"column":14,"nodeType":"161","messageId":"162","endLine":5,"endColumn":24},{"ruleId":"159","severity":1,"message":"178","line":1,"column":16,"nodeType":"161","messageId":"162","endLine":1,"endColumn":24},{"ruleId":"179","severity":1,"message":"180","line":15,"column":13,"nodeType":"181","endLine":15,"endColumn":55},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'mapStateToProps' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["184"],"Assign arrow function to a variable before exporting as module default",["182"],["183"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["185"],"'withRouter' is defined but never used.","'Fragment' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"190","text":"191"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"192","text":"193"},[607,609],"[getCurrentProfile]",[1786,1795],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]"]